apiVersion: apps/v1
kind: Deployment
metadata:
  name: badge-service
  namespace: ecoci-staging
  labels:
    app: badge-service
    environment: staging
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: badge-service
  template:
    metadata:
      labels:
        app: badge-service
        environment: staging
        version: v1
    spec:
      serviceAccountName: ecoci-app-service-account
      containers:
      - name: badge-service
        image: ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/ecoci/badge-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: ENVIRONMENT
          value: "staging"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: badge-service-service
  namespace: ecoci-staging
  labels:
    app: badge-service
spec:
  selector:
    app: badge-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: badge-service-ingress
  namespace: ecoci-staging
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: CERTIFICATE_ARN
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
  - host: badges.stg.ecoci.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: badge-service-service
            port:
              number: 80