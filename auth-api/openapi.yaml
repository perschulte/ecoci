openapi: 3.0.3
info:
  title: EcoCI Auth API
  description: |
    Authentication and data management API for the EcoCI carbon footprint tracking system.
    
    This API provides:
    - GitHub OAuth authentication
    - CO₂ measurement data storage from CLI
    - Repository carbon footprint aggregation
    
    ## Authentication
    
    The API uses JWT tokens stored in HttpOnly cookies for authentication.
    GitHub OAuth is used for initial user authentication.
    
    ## Security
    
    - All endpoints require HTTPS in production
    - Rate limiting is applied to prevent abuse
    - Input validation ensures data integrity
    - CORS is configured for web frontend access
    
  version: 1.0.0
  contact:
    name: EcoCI Team
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.ecoci.dev
    description: Production server
  - url: https://staging-api.ecoci.dev
    description: Staging server
  - url: http://localhost:8080
    description: Local development server

security:
  - cookieAuth: []
  - {}

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API service
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

  /auth/github:
    get:
      summary: Initiate GitHub OAuth flow
      description: Redirects to GitHub OAuth authorization page
      tags:
        - Authentication
      security: []
      parameters:
        - name: redirect_uri
          in: query
          description: URI to redirect to after successful authentication
          schema:
            type: string
            format: uri
            default: "/"
      responses:
        '302':
          description: Redirect to GitHub OAuth
        '400':
          description: Invalid redirect URI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/github/callback:
    get:
      summary: GitHub OAuth callback
      description: Handles GitHub OAuth callback and creates user session
      tags:
        - Authentication
      security: []
      parameters:
        - name: code
          in: query
          required: true
          description: Authorization code from GitHub
          schema:
            type: string
        - name: state
          in: query
          description: State parameter for CSRF protection
          schema:
            type: string
      responses:
        '302':
          description: Successful authentication, redirect to application
          headers:
            Set-Cookie:
              description: JWT token in HttpOnly cookie
              schema:
                type: string
        '400':
          description: Invalid authorization code or state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error during authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      summary: Logout user
      description: Invalidates the user session and clears authentication cookie
      tags:
        - Authentication
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Successfully logged out"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      summary: Get current user information
      description: Returns information about the currently authenticated user
      tags:
        - Authentication
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /runs:
    post:
      summary: Submit CO₂ measurement run
      description: |
        Stores a new CO₂ measurement run from the CLI tool.
        
        The run data must include the required fields: energy_kwh, co2_kg, and duration_s.
        Additional metadata can be included and will be stored in the run_metadata field.
        
        Repository information is automatically linked based on the authenticated user
        and the provided repository data.
      tags:
        - Runs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunSubmission'
            examples:
              basic_run:
                summary: Basic measurement run
                value:
                  energy_kwh: 0.145
                  co2_kg: 0.087
                  duration_s: 120.5
                  repository:
                    name: "my-app"
                    full_name: "user/my-app"
                    html_url: "https://github.com/user/my-app"
              detailed_run:
                summary: Run with additional metadata
                value:
                  energy_kwh: 0.256
                  co2_kg: 0.154
                  duration_s: 240.8
                  git_commit_sha: "a1b2c3d4e5f6"
                  branch_name: "main"
                  workflow_name: "CI/CD Pipeline"
                  repository:
                    name: "my-app"
                    full_name: "user/my-app"
                    html_url: "https://github.com/user/my-app"
                    description: "My application"
                  metadata:
                    cpu_cores: 4
                    memory_gb: 8
                    os: "ubuntu-latest"
      responses:
        '201':
          description: Run successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '400':
          description: Invalid run data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /repos:
    get:
      summary: List repositories with CO₂ statistics
      description: |
        Returns a paginated list of repositories with aggregated CO₂ statistics.
        
        Results are sorted by total CO₂ emissions (highest first) by default.
        Only repositories with at least one measurement run are included.
      tags:
        - Repositories
      parameters:
        - name: page
          in: query
          description: Page number (1-based)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of repositories per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            enum: [total_co2, avg_co2, run_count, last_run]
            default: total_co2
        - name: order
          in: query
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: owner
          in: query
          description: Filter by repository owner username
          schema:
            type: string
        - name: name
          in: query
          description: Filter by repository name (partial match)
          schema:
            type: string
      responses:
        '200':
          description: List of repositories with CO₂ statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/RepositoryStats'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /repos/{repo_id}/runs:
    get:
      summary: Get runs for a specific repository
      description: Returns paginated list of CO₂ measurement runs for a repository
      tags:
        - Repositories
        - Runs
      parameters:
        - name: repo_id
          in: path
          required: true
          description: Repository UUID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: from_date
          in: query
          description: Filter runs from this date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: to_date
          in: query
          description: Filter runs to this date (ISO 8601)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of runs for the repository
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: ecoci_token
      description: JWT token stored in HttpOnly cookie

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: User UUID
        github_username:
          type: string
          description: GitHub username
        github_email:
          type: string
          format: email
          description: GitHub email address
          nullable: true
        avatar_url:
          type: string
          format: uri
          description: GitHub avatar URL
          nullable: true
        name:
          type: string
          description: User's display name
          nullable: true
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
      required:
        - id
        - github_username
        - created_at

    Repository:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Repository name
        full_name:
          type: string
          description: Full repository name (owner/repo)
        description:
          type: string
          description: Repository description
          nullable: true
        private:
          type: boolean
          description: Whether repository is private
        html_url:
          type: string
          format: uri
          description: GitHub repository URL
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - full_name
        - private
        - html_url
        - created_at

    RepositoryStats:
      allOf:
        - $ref: '#/components/schemas/Repository'
        - type: object
          properties:
            owner:
              $ref: '#/components/schemas/User'
            stats:
              type: object
              properties:
                total_co2_kg:
                  type: number
                  format: float
                  description: Total CO₂ emissions in kg
                avg_co2_kg:
                  type: number
                  format: float
                  description: Average CO₂ per run in kg
                total_energy_kwh:
                  type: number
                  format: float
                  description: Total energy consumption in kWh
                avg_energy_kwh:
                  type: number
                  format: float
                  description: Average energy per run in kWh
                run_count:
                  type: integer
                  description: Total number of runs
                last_run_at:
                  type: string
                  format: date-time
                  description: Timestamp of most recent run
              required:
                - total_co2_kg
                - avg_co2_kg
                - total_energy_kwh
                - avg_energy_kwh
                - run_count
                - last_run_at

    Run:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        repository_id:
          type: string
          format: uuid
        energy_kwh:
          type: number
          format: float
          minimum: 0
          description: Energy consumption in kilowatt-hours
        co2_kg:
          type: number
          format: float
          minimum: 0
          description: CO₂ emissions in kilograms
        duration_s:
          type: number
          format: float
          minimum: 0
          description: Execution duration in seconds
        git_commit_sha:
          type: string
          pattern: '^[a-f0-9]{40}$'
          description: Git commit SHA (40 character hex)
          nullable: true
        branch_name:
          type: string
          description: Git branch name
          nullable: true
        workflow_name:
          type: string
          description: CI workflow name
          nullable: true
        run_metadata:
          type: object
          description: Additional metadata from CLI
          nullable: true
        created_at:
          type: string
          format: date-time
      required:
        - id
        - user_id
        - repository_id
        - energy_kwh
        - co2_kg
        - duration_s
        - created_at

    RunSubmission:
      type: object
      properties:
        energy_kwh:
          type: number
          format: float
          minimum: 0
          description: Energy consumption in kilowatt-hours
        co2_kg:
          type: number
          format: float
          minimum: 0
          description: CO₂ emissions in kilograms
        duration_s:
          type: number
          format: float
          minimum: 0
          description: Execution duration in seconds
        git_commit_sha:
          type: string
          pattern: '^[a-f0-9]{40}$'
          description: Git commit SHA (40 character hex)
        branch_name:
          type: string
          description: Git branch name
        workflow_name:
          type: string
          description: CI workflow name
        repository:
          type: object
          properties:
            name:
              type: string
              description: Repository name
            full_name:
              type: string
              description: Full repository name (owner/repo)
            html_url:
              type: string
              format: uri
              description: GitHub repository URL
            description:
              type: string
              description: Repository description
            private:
              type: boolean
              description: Whether repository is private
              default: false
          required:
            - name
            - full_name
            - html_url
        metadata:
          type: object
          description: Additional metadata (will be stored as JSON)
      required:
        - energy_kwh
        - co2_kg
        - duration_s
        - repository

    Pagination:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          description: Current page number
        limit:
          type: integer
          minimum: 1
          description: Items per page
        total:
          type: integer
          minimum: 0
          description: Total number of items
        pages:
          type: integer
          minimum: 0
          description: Total number of pages
        has_next:
          type: boolean
          description: Whether there are more pages
        has_prev:
          type: boolean
          description: Whether there are previous pages
      required:
        - page
        - limit
        - total
        - pages
        - has_next
        - has_prev

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
      required:
        - error
        - timestamp

    ValidationError:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
        validation_errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field name with validation error
              message:
                type: string
                description: Validation error message
              value:
                description: Invalid value that caused the error
            required:
              - field
              - message
      required:
        - error
        - timestamp
        - validation_errors

tags:
  - name: Health
    description: Service health and status endpoints
  - name: Authentication
    description: GitHub OAuth authentication and session management
  - name: Runs
    description: CO₂ measurement run management
  - name: Repositories
    description: Repository statistics and data aggregation